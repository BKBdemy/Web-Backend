# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    permissions:
      actions: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        check-latest: true
        cache: true
        
    - name: Setup mockery
      # You may pin to the exact commit or the version.
      # uses: brokeyourbike/go-mockery-action@2fc5585e2c58aa39aaa6b2479fefcf77b6a4d23a
      uses: brokeyourbike/go-mockery-action@v0.1.4
      with:
        mockery-version: "2.16.0"
    
    - name: Setup swag & generate Swagger docs
      uses: yegorrybchenko/go-swag-action@v0.1
      with:
        command: init
    
    - name: Generate mock interfaces
      run: mockery --all --with-expecter 
    
    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        # let the report trigger content trigger a failure using the GitHub Security features.
        args: '-no-fail -fmt sarif -out results.sarif ./...'
          
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: results.sarif
